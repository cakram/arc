* add locking to the virtual memory manager:
   - global lock for the higher half
   - per address-space lock for the lower half

* dlmalloc ABORT should call generic panic (rather than boot_panic) function
  when it is made

* use #defines in gdt.c instead of hardcoding the flags

* use PG_GLOBAL flag for anything in the kernel addresss space and check all
  the TLB flushing is done properly (also look into TLB shootdown when SMP is
  supported)

* look at how caching should work for memory-mapped I/O devices like the local
  APIC and I/O APIC

* support allocation of different physical page sizes (4k, 2m and 1g) and from
  different zones of memory (dma, dma32 and std)

* heap_allocate() and vmm_map_range() should try to use big pages (2m and 1g)
  where possible

* deal with the fact that some ACPI tables (e.g. FACS) do not use the standard
  header

* fill out the FADT structure

